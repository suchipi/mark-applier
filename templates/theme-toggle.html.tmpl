<!--
The next style, script, and div elements come from npm:mark-applier/templates/theme-toggle.html.tmpl,
which has the following license:

MIT License Copyright (c) 2023 Lily Skye

Permission is hereby granted, free of
charge, to any person obtaining a copy of this software and associated
documentation files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use, copy, modify, merge,
publish, distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to the
following conditions:

The above copyright notice and this permission notice
(including the next paragraph) shall be included in all copies or substantial
portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF
ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
-->
<style>
  #mark-applier-theme-toggle {
    position: absolute;
    top: 0;
    right: 0;

    /* Copied from .markdown-body styles */
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Noto Sans",
      Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji";
    font-size: 16px;
  }

  #mark-applier-theme-toggle label {
    display: inline-block;
    background-color: var(--color-body-bg);
    color: var(--color-body-fg);
    padding: 3px 4px 4px 4px;
    border-bottom-left-radius: 4px;
    border: 1px solid var(--color-body-fg);
    border-top-width: 0px;
    border-right-width: 0px;
  }

  /* breakpoint here matches that found in page-layout.css */
  @media (max-width: 767px) {
    #mark-applier-theme-toggle + .markdown-body {
      padding-top: 28px;
    }
  }
</style>
<script>
  window.addEventListener("DOMContentLoaded", () => {
    function init() {
      const storageKey = "mark-applier-selected-theme";

      const themeFromStorage = localStorage.getItem(storageKey);
      const osPreferredTheme = getOsPreferredTheme();

      const checkbox = document.body.querySelector(
        '#mark-applier-theme-toggle input[type="checkbox"]'
      );
      if (checkbox == null) {
        console.warn("Failed to find light-mode/dark-mode toggle checkbox");
        return;
      }

      if (themeFromStorage != null) {
        setTheme(themeFromStorage === "dark");
      }

      const effectiveTheme = themeFromStorage || osPreferredTheme || "light";
      if (effectiveTheme === "dark") {
        checkbox.checked = true;
      } else {
        checkbox.checked = false;
      }

      checkbox.addEventListener("change", () => {
        setTheme(checkbox.checked);
      });
    }

    function getOsPreferredTheme() {
      if (!window.matchMedia) return null;

      if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
        return "dark";
      } else if (window.matchMedia("(prefers-color-scheme: light)").matches) {
        return "light";
      }

      return null;
    }

    function setTheme(isDark) {
      if (isDark) {
        document.body.classList.remove("light-theme");
        document.body.classList.add("dark-theme");
      } else {
        document.body.classList.remove("dark-theme");
        document.body.classList.add("light-theme");
      }
    }

    init();
  });
</script>
<div id="mark-applier-theme-toggle">
  <label>
    Dark Theme
    <input type="checkbox" />
  </label>
</div>
